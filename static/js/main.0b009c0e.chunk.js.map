{"version":3,"sources":["Header.tsx","Card/ContentPlaceholder.tsx","Card/animations.ts","Card/Title.tsx","Card/Image.tsx","utils/use-wheel-scroll.ts","Card/index.tsx","utils/use-inverted-border-radius.ts","utils/use-scroll-constraints.ts","CardList.tsx","index.tsx"],"names":["Header","react","className","dist","ContentPlaceholder","React","inverted","useInvertedScale","framer_motion_es","div","style","Object","objectSpread","originY","originX","p","avgWordsPerSentence","avgSentencesPerParagraph","openSpring","type","stiffness","damping","closeSpring","Title","_ref","title","category","isSelected","x","y","initial","animate","transition","transformTemplate","scaleTranslate","_ref2","scaleX","scaleY","concat","Image","id","_ref$pointOfInterest","pointOfInterest","backgroundColor","img","src","alt","deltaThreshold","elasticFactor","springTo","value","from","to","isAnimating","start","complete","animation","spring","velocity","getVelocity","update","v","set","stop","debouncedSpringTo","debounce","dismissDistance","Card","memo","history","useMotionValue","zIndex","radius","borderRadius","useEffect","updateRadius","latestX","get","latestY","xRadius","yRadius","unsubScaleX","onChange","unsubScaleY","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","useInvertedBorderRadius","cardRef","useRef","constraints","ref","measureConstraints","_useState","useState","top","bottom","_useState2","slicedToArray","setConstraints","element","current","viewportHeight","window","innerHeight","contentTop","offsetTop","contentHeight","offsetHeight","scrollableViewport","Math","min","useScrollConstraints","checkSwipeToDismiss","push","containerRef","onWheelCallback","isActive","useDomEvent","event","preventDefault","currentY","newY","deltaY","startedAnimation","isWithinBounds","mix","cancel","passive","useWheelScroll","Card_Overlay","layoutTransition","drag","dragConstraints","onDrag","onUpdate","latest","Image_Image","Title_Title","react_router_dom","prev","next","Overlay","opacity","duration","pointerEvents","List","match","cardData","map","card","assign","key","params","CardList","react_router","path","component","App","Header_Header","CardList_CardList","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.0b009c0e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Avatar } from \"react-lorem-ipsum\";\n\nexport const Header = () => (\n  <header>\n    <span className=\"date\">Tuesday, August 13th</span>\n    <h1>Today</h1>\n    <div className=\"avatar\">\n      <Avatar />\n    </div>\n  </header>\n);\n","import * as React from \"react\";\nimport { LoremIpsum } from \"react-lorem-ipsum\";\nimport { motion, useInvertedScale } from \"framer-motion\";\n\nexport const ContentPlaceholder = React.memo(() => {\n  const inverted = useInvertedScale();\n  return (\n    <motion.div\n      className=\"content-container\"\n      style={{ ...inverted, originY: 0, originX: 0 }}\n    >\n      <LoremIpsum p={6} avgWordsPerSentence={6} avgSentencesPerParagraph={4} />\n    </motion.div>\n  );\n});\n","export const openSpring = { type: \"spring\", stiffness: 200, damping: 30 };\nexport const closeSpring = { type: \"spring\", stiffness: 300, damping: 35 };\n","import * as React from \"react\";\nimport { motion, useInvertedScale } from \"framer-motion\";\nimport { closeSpring, openSpring } from \"./animations\";\n\nexport const Title = ({ title, category, isSelected }) => {\n  const inverted = useInvertedScale();\n  const x = isSelected ? 30 : 15;\n  const y = x;\n\n  return (\n    <motion.div\n      className=\"title-container\"\n      initial={false}\n      animate={{ x, y }}\n      transition={isSelected ? openSpring : closeSpring}\n      transformTemplate={scaleTranslate}\n      style={{ ...inverted, originX: 0, originY: 0 }}\n    >\n      <span className=\"category\">{category}</span>\n      <h2>{title}</h2>\n    </motion.div>\n  );\n};\n\n/**\n * `transform` is order-dependent, so if you scale(0.5) before translateX(100px),\n * the visual translate will only be 50px.\n *\n * The intuitive pattern is to translate before doing things like scale and\n * rotate that will affect the coordinate space. So Framer Motion takes an\n * opinion on that and allows you to animate them\n * individually without having to write a whole transform string.\n *\n * However in this component we're doing something novel by inverting\n * the scale of the parent component. Because of this we want to translate\n * through scaled coordinate space, and can use the transformTemplate prop to do so.\n */\nconst scaleTranslate = ({ x, y, scaleX, scaleY }) =>\n  `scaleX(${scaleX}) scaleY(${scaleY}) translate(${x}, ${y}) translateZ(0)`;\n","import * as React from \"react\";\nimport { motion, useInvertedScale } from \"framer-motion\";\nimport { closeSpring } from \"./animations\";\n\nexport const Image = ({\n  id,\n  isSelected,\n  pointOfInterest = 0,\n  backgroundColor\n}) => {\n  const inverted = useInvertedScale();\n\n  return (\n    <motion.div\n      className=\"card-image-container\"\n      style={{ ...inverted, backgroundColor, originX: 0, originY: 0 }}\n    >\n      <motion.img\n        className=\"card-image\"\n        src={`images/${id}.jpg`}\n        alt=\"\"\n        initial={false}\n        animate={\n          isSelected ? { x: -20, y: -20 } : { x: -pointOfInterest, y: 0 }\n        }\n        transition={closeSpring}\n      />\n    </motion.div>\n  );\n};\n","import { RefObject } from \"react\";\nimport { useDomEvent, MotionValue } from \"framer-motion\";\nimport { spring } from \"popmotion\";\nimport { mix } from \"@popmotion/popcorn\";\nimport { debounce } from \"lodash\";\n\ninterface Constraints {\n  top: number;\n  bottom: number;\n}\n\n// Absolute distance a wheel scroll event can travel outside of\n// the defined constraints before we fire a \"snap back\" animation\nconst deltaThreshold = 5;\n\n// If wheel event fires beyond constraints, multiple the delta by this amount\nconst elasticFactor = 0.2;\n\nfunction springTo(value: MotionValue, from: number, to: number) {\n  if (value.isAnimating()) return;\n\n  value.start(complete => {\n    const animation = spring({\n      from,\n      to,\n      velocity: value.getVelocity(),\n      stiffness: 400,\n      damping: 40\n    }).start({\n      update: (v: number) => value.set(v),\n      complete\n    });\n\n    return () => animation.stop();\n  });\n}\n\nconst debouncedSpringTo = debounce(springTo, 100);\n\n/**\n * Re-implements wheel scroll for overlflow: hidden elements.\n *\n * Adds Apple Watch crown-style constraints, where the user\n * must continue to input wheel events of a certain delta at a certain\n * speed or the scrollable container will spring back to the nearest\n * constraint.\n *\n * Currently achieves this using event.deltaY and a debounce, which\n * feels pretty good during direct input but it'd be better to increase\n * the deltaY threshold during momentum scroll.\n *\n * TODOs before inclusion in Framer Motion:\n * - Detect momentum scroll and increase delta threshold before spring\n * - Remove padding hack\n * - Handle x-axis\n * - Perhaps handle arrow and space keyboard events?\n *\n * @param ref - Ref of the Element to attach listener to\n * @param y - MotionValue for the scrollable element - might be different to the Element\n * @param constraints - top/bottom scroll constraints in pixels.\n * @param isActive - `true` if this listener should fire.\n */\nexport function useWheelScroll(\n  ref: RefObject<Element>,\n  y: MotionValue<number>,\n  constraints: Constraints | null,\n  onWheelCallback: (e: WheelEvent) => void,\n  isActive: boolean\n) {\n  const onWheel = (event: WheelEvent) => {\n    event.preventDefault();\n\n    const currentY = y.get();\n    let newY = currentY - event.deltaY;\n    let startedAnimation = false;\n    const isWithinBounds =\n      constraints && newY >= constraints.top && newY <= constraints.bottom;\n\n    if (constraints && !isWithinBounds) {\n      newY = mix(currentY, newY, elasticFactor);\n\n      if (newY < constraints.top) {\n        if (event.deltaY <= deltaThreshold) {\n          springTo(y, newY, constraints.top);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.top);\n        }\n      }\n\n      if (newY > constraints.bottom) {\n        if (event.deltaY >= -deltaThreshold) {\n          springTo(y, newY, constraints.bottom);\n          startedAnimation = true;\n        } else {\n          debouncedSpringTo(y, newY, constraints.bottom);\n        }\n      }\n    }\n\n    if (!startedAnimation) {\n      y.stop();\n      y.set(newY);\n    } else {\n      debouncedSpringTo.cancel();\n    }\n\n    onWheelCallback(event);\n  };\n\n  useDomEvent(ref, \"wheel\", isActive && onWheel, { passive: false });\n}\n","import * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { CardData } from \"../types\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\n\ninterface Props extends CardData {\n  isSelected: boolean;\n  history: {\n    push: (route: string) => void;\n  };\n}\n\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nconst dismissDistance = 150;\n\nexport const Card = memo(\n  ({\n    isSelected,\n    id,\n    title,\n    category,\n    history,\n    pointOfInterest,\n    backgroundColor\n  }: Props) => {\n    const y = useMotionValue(0);\n    const zIndex = useMotionValue(isSelected ? 2 : 0);\n\n    // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n    const inverted = useInvertedBorderRadius(20);\n\n    // We'll use the opened card element to calculate the scroll constraints\n    const cardRef = useRef(null);\n    const constraints = useScrollConstraints(cardRef, isSelected);\n\n    function checkSwipeToDismiss() {\n      y.get() > dismissDistance && history.push(\"/\");\n    }\n\n    function checkZIndex(latest) {\n      if (isSelected) {\n        zIndex.set(2);\n      } else if (!isSelected && latest.scaleX < 1.01) {\n        zIndex.set(0);\n      }\n    }\n\n    // When this card is selected, attach a wheel event listener\n    const containerRef = useRef(null);\n    useWheelScroll(\n      containerRef,\n      y,\n      constraints,\n      checkSwipeToDismiss,\n      isSelected\n    );\n\n    return (\n      <li ref={containerRef} className={`card`}>\n        <Overlay isSelected={isSelected} />\n        <div className={`card-content-container ${isSelected && \"open\"}`}>\n          <motion.div\n            ref={cardRef}\n            className=\"card-content\"\n            style={{ ...inverted, zIndex, y }}\n            layoutTransition={isSelected ? openSpring : closeSpring}\n            drag={isSelected ? \"y\" : false}\n            dragConstraints={constraints}\n            onDrag={checkSwipeToDismiss}\n            onUpdate={checkZIndex}\n          >\n            <Image\n              id={id}\n              isSelected={isSelected}\n              pointOfInterest={pointOfInterest}\n              backgroundColor={backgroundColor}\n            />\n            <Title title={title} category={category} isSelected={isSelected} />\n            <ContentPlaceholder />\n          </motion.div>\n        </div>\n        {!isSelected && <Link to={id} className={`card-open-link`} />}\n      </li>\n    );\n  },\n  (prev, next) => prev.isSelected === next.isSelected\n);\n\nconst Overlay = ({ isSelected }) => (\n  <motion.div\n    initial={false}\n    animate={{ opacity: isSelected ? 1 : 0 }}\n    transition={{ duration: 0.2 }}\n    style={{ pointerEvents: isSelected ? \"auto\" : \"none\" }}\n    className=\"overlay\"\n  >\n    <Link to=\"/portfolio/\" />\n  </motion.div>\n);\n","import { useMotionValue, useInvertedScale } from \"framer-motion\";\nimport { useEffect } from \"react\";\n\n/**\n * Avoid the stretch/squashing of border radius by using inverting them\n * throughout the component's layout transition.\n *\n * It would be possible to animate to/from different radius, for instance\n * in mobile mode from rounded to square for full-screen panels, by passing\n * the calculated inverted transform to `layoutTransition` when set as a function.\n *\n * Those inverted scales could be provided here to act as a `from` value,\n * then we can use Popcorn's `mix` function to get our\n *\n * @param radius\n */\nexport function useInvertedBorderRadius(radius: number) {\n  const scaleX = useMotionValue(1);\n  const scaleY = useMotionValue(1);\n  const inverted = useInvertedScale({ scaleX, scaleY });\n  const borderRadius = useMotionValue(`${radius}px`);\n\n  useEffect(() => {\n    function updateRadius() {\n      const latestX = inverted.scaleX.get();\n      const latestY = inverted.scaleY.get();\n      const xRadius = latestX * radius + \"px\";\n      const yRadius = latestY * radius + \"px\";\n\n      borderRadius.set(`${xRadius} ${yRadius}`);\n    }\n\n    const unsubScaleX = inverted.scaleX.onChange(updateRadius);\n    const unsubScaleY = inverted.scaleY.onChange(updateRadius);\n\n    return () => {\n      unsubScaleX();\n      unsubScaleY();\n    };\n  }, [radius]);\n\n  return {\n    scaleX,\n    scaleY,\n    borderTopLeftRadius: borderRadius,\n    borderTopRightRadius: borderRadius,\n    borderBottomLeftRadius: borderRadius,\n    borderBottomRightRadius: borderRadius\n  };\n}\n","import { useState, useEffect } from \"react\";\n\ninterface Constraints {\n  top: number;\n  bottom: number;\n}\n\n/**\n * Calculate the top/bottom scroll constraints of a full-screen element vs the viewport\n */\nexport function useScrollConstraints(ref, measureConstraints: boolean) {\n  const [constraints, setConstraints] = useState<Constraints>({\n    top: 0,\n    bottom: 0\n  });\n\n  useEffect(() => {\n    if (!measureConstraints) return;\n\n    const element = ref.current;\n    const viewportHeight = window.innerHeight;\n    const contentTop = element.offsetTop;\n    const contentHeight = element.offsetHeight;\n    const scrollableViewport = viewportHeight - contentTop * 2;\n    const top = Math.min(scrollableViewport - contentHeight, 0);\n\n    setConstraints({ top, bottom: 0 });\n  }, [measureConstraints]);\n\n  return constraints;\n}\n","import * as React from \"react\";\nimport { Card } from \"./Card\";\nimport { CardData } from \"./types\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst List = ({ match, history }) => (\n  <ul className=\"card-list\">\n    {cardData.map(card => (\n      <Card\n        key={card.id}\n        isSelected={match.params.id === card.id}\n        history={history}\n        {...card}\n      />\n    ))}\n  </ul>\n);\n\nexport const CardList = () => (\n  <Router>\n    <Route path={[\"/portfolio/:id\", \"/portfolio/\"]} component={List} />\n  </Router>\n);\n\nconst cardData: CardData[] = [\n  // Photo by ivan Torres on Unsplash\n  {\n    id: \"c\",\n    category: \"Pizza\",\n    title: \"5 Food Apps Delivering the Best of Your City\",\n    pointOfInterest: 80,\n    backgroundColor: \"#814A0E\"\n  },\n  // Photo by Dennis Brendel on Unsplash\n  {\n    id: \"f\",\n    category: \"How to\",\n    title: \"Arrange Your Apple Devices for the Gram\",\n    pointOfInterest: 120,\n    backgroundColor: \"#959684\"\n  },\n  // Photo by Alessandra Caretto on Unsplash\n  {\n    id: \"a\",\n    category: \"Pedal Power\",\n    title: \"Map Apps for the Superior Mode of Transport\",\n    pointOfInterest: 260,\n    backgroundColor: \"#5DBCD2\"\n  },\n  // Photo by Taneli Lahtinen on Unsplash\n  {\n    id: \"g\",\n    category: \"Holidays\",\n    title: \"Our Pick of Apps to Help You Escape From Apps\",\n    pointOfInterest: 200,\n    backgroundColor: \"#8F986D\"\n  },\n  // Photo by Simone Hutsch on Unsplash\n  {\n    id: \"d\",\n    category: \"Photography\",\n    title: \"The Latest Ultra-Specific Photography Editing Apps\",\n    pointOfInterest: 150,\n    backgroundColor: \"#FA6779\"\n  },\n  // Photo by Siora Photography on Unsplash\n  {\n    id: \"h\",\n    category: \"They're all the same\",\n    title: \"100 Cupcake Apps for the Cupcake Connoisseur\",\n    pointOfInterest: 60,\n    backgroundColor: \"#282F49\"\n  },\n  // Photo by Yerlin Matu on Unsplash\n  {\n    id: \"e\",\n    category: \"Cats\",\n    title: \"Yes, They Are Sociopaths\",\n    pointOfInterest: 200,\n    backgroundColor: \"#AC7441\"\n  },\n  // Photo by Ali Abdul Rahman on Unsplash\n  {\n    id: \"b\",\n    category: \"Holidays\",\n    title: \"Seriously the Only Escape is the Stratosphere\",\n    pointOfInterest: 260,\n    backgroundColor: \"#CC555B\"\n  }\n];\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Header } from \"./Header\";\nimport { CardList } from \"./CardList\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <CardList />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}